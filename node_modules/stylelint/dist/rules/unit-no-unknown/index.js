"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messages = exports.ruleName = undefined;

exports.default = function (actual, options) {
  return function (root, result) {
    var validOptions = (0, _utils.validateOptions)(result, ruleName, { actual: actual }, {
      actual: options,
      possible: {
        ignoreUnits: [_lodash.isString]
      },
      optional: true
    });

    if (!validOptions) {
      return;
    }

    root.walkDecls(function (decl) {
      var value = decl.value;


      (0, _postcssValueParser2.default)(value).walk(function (node) {
        // Ignore wrong units within `url` function
        if (node.type === "function" && node.value === "url") {
          return false;
        }
        if (node.type !== "word" || (0, _utils.cssWordIsVariable)(node.value)) {
          return;
        }

        var parsedUnit = _postcssValueParser2.default.unit(node.value);

        if (!parsedUnit) {
          return;
        }

        var unit = parsedUnit.unit;

        if (!unit || (0, _utils.isKnownUnit)(unit)) {
          return;
        }

        var ignoreUnits = options && options.ignoreUnits || [];

        if (ignoreUnits.indexOf(unit) !== -1) {
          return;
        }

        (0, _utils.report)({
          message: messages.rejected(unit),
          node: decl,
          index: (0, _utils.declarationValueIndexOffset)(decl) + node.sourceIndex,
          result: result,
          ruleName: ruleName
        });
      });
    });
  };
};

var _lodash = require("lodash");

var _postcssValueParser = require("postcss-value-parser");

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _utils = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ruleName = exports.ruleName = "unit-no-unknown";

var messages = exports.messages = (0, _utils.ruleMessages)(ruleName, {
  rejected: function rejected(u) {
    return "Unexpected unknown unit \"" + u + "\"";
  }
});